#! /usr/bin/env node

const _shelljs = require('shelljs');
const exit = _shelljs.exit;
const fs = require('fs');
const exec = require('./utilities/exec');
const format = require('format-date');

const args = require('minimist')(process.argv.slice(2), {
  boolean: true,
});

if (args._.length !== 1) {
  process.stderr.write(
`Usage:  release.js [<options>] <package name>

OPTIONS
  --bump=<version keyword>  Valid \`npm version\` keyword (default: patch)
  --publish                 Publish to npm and push to git
`
  );
  exit(1);
}

const packageFolder = args._[0];
const versionKeyword = args.bump || 'patch';

const projectRoot = `${__dirname}/..`;
const packagesRoot = `${projectRoot}/packages`;

console.log('\nBumping package version…');
exec(`npm --no-git-tag-version version ${versionKeyword}`, {
  cwd: `${packagesRoot}/${packageFolder}`,
});
console.log('…done!');

const manifest = require(`${packagesRoot}/${packageFolder}/package.json`);
const versionNumber = manifest.version;
const packageName = manifest.name;

console.log('Updating dependency versions…');
require('./utilities/packages').forEach(project => {
  // We must require `./utilities/packages` after the bump.

  const dependencies = project.manifest.dependencies;

  if (dependencies) {
    const newDependencies = Object.keys(dependencies)
      .reduce((target, dep) => Object.assign({}, target,
        {[dep]: (dep === packageName ?
          `^${versionNumber}` :
          dependencies[dep]
        )}
      ), {});

    const newManifest = JSON.stringify(
      Object.assign(project.manifest, {dependencies: newDependencies}), null, 2
    ) + '\n';

    fs.writeFileSync(`${project.cwd}/package.json`, newManifest);
  }
});
console.log('…done!');

console.log('Committing changes…');
exec(`git add packages/*/package.json packages/*/Changelog.yaml`);
exec(`git commit --message='${packageName} ${versionNumber}'`);
exec('git tag ' +
  '--annotate ' +
  "--message='Bump version' " +
  `${packageFolder}-v${versionNumber}`
);
console.log('…done!');

if (!args.publish) exit(0);

console.log('Publishing packages…');
exec('npm publish --access=public', {cwd: `${packagesRoot}/${packageFolder}`});
exec('git push --follow-tags');
console.log('…done!');
